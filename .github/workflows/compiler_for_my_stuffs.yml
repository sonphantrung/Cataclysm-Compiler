# References: github.com/CleverRaven/Cataclysm-DDA/blob/master/.github/workflows/msvc-full-features.yml
name: Cataclysm Compiler

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: cataclysm-build-a
  cancel-in-progress: true

jobs:
  windows-compiler:
    continue-on-error: true
    runs-on: windows-2019
    steps:
      # - uses: actions/checkout@v3
      - name: Clone CDDA
        uses: actions/checkout@v3
        with:
          repository: sonphantrung/Cataclysm-DDA
          # repository: casswedson/Cataclysm-DDA
          fetch-depth: 1
          ref: force-replace
          
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
         
      - name: Use GNU tar to enable zstd for actions/cache
        run: |
         echo "Adding GNU tar to PATH"
         echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
        shell: cmd

      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@v10.4
        id: runvcpkg
        with:
        # run-vcpkg tries to hash vcpkg.json but complans if it finds more than one.
        # That said, we also have our custom vcpkg_triplets to hash, so we keep everything the same.
        appendedCacheKey: ${{ hashFiles( 'msvc-full-features/vcpkg.json', '.github/vcpkg_triplets/**' ) }}-x64
        vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
        # We have to use at least this version of vcpkg to include fixes for yasm-tool's
        # availability only as an x86 host tool. Keep it in sync with the builtin-baseline
        # field in vcpkg.json. Caching happens as a post-action which runs at the end of
        # the whole workflow, after vcpkg install happens during msbuild run.
        vcpkgGitCommitId: '659b6b5eeacb50ffe25856413960d231ce1a4b58'

      - name: Integrate vcpkg
        run: |
          vcpkg integrate install --vcpkg-root '${{ runner.workspace }}\b\vcpkg'
      - name: Download ccache
        uses: robinraju/release-downloader@v1.4
        with:
          repository: 'ccache/ccache'
          tag: 'v4.6.1'
          fileName: 'ccache-4.6.1-windows-x86_64.zip'

      - name: Install ccache
        id: install-ccache
        run: |
         unzip ccache-4.6.1-windows-x86_64.zip
          cp ccache-4.6.1-windows-x86_64/ccache.exe ccache-4.6.1-windows-x86_64/cl.exe
          cp ccache-4.6.1-windows-x86_64/ccache.exe ccache-4.6.1-windows-x86_64/clang-cl.exe
          mv ccache-4.6.1-windows-x86_64 ${{ env.CDDA_CCACHE_PATH }}
      - name: Get ccache vars
        id: get-vars
        run: |
          echo "::set-output name=datetime::$(/bin/date -u "+%Y%m%d%H%M")"
          echo "::set-output name=ccache-path::$(echo "$APPDATA\\ccache")"
        shell: bash

      - name: ccache cache files
        uses: actions/cache@v3
        with:
          path: ${{ steps.get-vars.outputs.ccache-path }}
        # double-dash after compiler is not a typo, it is to disambiguate between g++-<date> and g++-11-<date> for restore key prefix matching
        key: ccache-${{ github.ref_name }}-${{ runner.os }}-msvc--${{ steps.get-vars.outputs.datetime }}
        restore-keys: |
          ccache-master-${{ runner.os }}-msvc--
      - name: Configure ccache
        run: |
          ${{ env.CDDA_CCACHE_PATH }}\ccache.exe -M 10G
          ${{ env.CDDA_CCACHE_PATH }}\ccache.exe -s -v
          ${{ env.CDDA_CCACHE_PATH }}\ccache.exe -z
      - name: Symlink intermediates to C
        run: |
          mkdir -p "$env:TEMP\objwin"
          New-Item -ItemType SymbolicLink -Target "$env:TEMP\objwin" objwin
      - name: Build
        run: |
          msbuild -m -p:Configuration=Release -p:Platform=x64 "-target:Cataclysm-vcpkg-static;Cataclysm-test-vcpkg-static;JsonFormatter-vcpkg-static" msvc-full-features/Cataclysm-vcpkg-static.sln
          msbuild -m -p:Configuration=Release -p:Platform=x64 "-target:ObjectCreator-vcpkg-static" msvc-object_creator/ObjectCreator-vcpkg-static.sln
      - name: Post-build ccache manipulation
        if: ${{ !failure() }}
        run: |
          ${{ env.CDDA_CCACHE_PATH }}\ccache.exe -s -v
          ${{ env.CDDA_CCACHE_PATH }}\ccache.exe -M ${{ env.CCACHE_LIMIT }}
          ${{ env.CDDA_CCACHE_PATH }}\ccache.exe -c
          ${{ env.CDDA_CCACHE_PATH }}\ccache.exe -s -v
      - name: Dump vcpkg logs if build failed
        if: failure()
        run: |
          echo =================================================
          Get-ChildItem "${{ runner.workspace }}/Cataclysm-DDA/msvc-full-features/vcpkg_installed" -Recurse
          echo =================================================
          Get-ChildItem "${{ runner.workspace }}/Cataclysm-DDA/msvc-object_creator/vcpkg_installed" -Recurse
          echo =================================================
          Get-ChildItem "${{ runner.workspace }}/b/vcpkg/buildtrees" |
          Foreach-Object {
            Get-ChildItem $_.FullName -Filter *.log |
            Foreach-Object {
              echo =================================================
              echo $_.FullName
              echo =================================================
              type $_.FullName
            }
        }
    - name: Compile .mo files for localization
      run: |
          & "C:\msys64\mingw64\bin\mingw32-make" -C lang -j2
          mkdir -p ./data/mods/TEST_DATA/lang/mo/ru/LC_MESSAGES -ErrorAction SilentlyContinue
          msgfmt -f -o ./data/mods/TEST_DATA/lang/mo/ru/LC_MESSAGES/TEST_DATA.mo ./data/mods/TEST_DATA/lang/po/ru.po
    - name: Enable GitHub Actions problem matchers
      run: |
          Write-Output "::add-matcher::build-scripts/problem-matchers/catch2.json"
    - name: Dump disk usage logs if job failed
      if: failure()
      run: |
        echo =================================================
        df
        echo =================================================
        du -sh *
        echo =================================================
        du -sh msvc-full-features/*
        echo =================================================
        du -sh msvc-object_creator/*
        echo =================================================
        du -sh tools/*
        echo =================================================
      shell: bash

    - name: Don't upload vcpkg cache on failure or PRs
      if: ${{ failure() || cancelled()}}
      run: |
        echo "RUNVCPKG_NO_CACHE=1" >> $GITHUB_ENV
      shell: bash
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cataclysm-tiles-binary
          path: ./Cataclysm*.exe
          # path: ./object-creator.zip
